{
  "parameters": [
    {
      "type": "ParameterTypeNumber",
      "index": 0,
      "name": "playing",
      "paramId": "playing",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s07",
      "constrainFunc": "param_29_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 1,
      "name": "bitcrushing",
      "paramId": "bitcrushing",
      "minimum": 0.01,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0.01,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s03",
      "constrainFunc": "param_30_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 2,
      "name": "key_offset",
      "paramId": "key_offset",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s06",
      "constrainFunc": "param_31_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 3,
      "name": "current_beat",
      "paramId": "current_beat",
      "minimum": 1,
      "maximum": 32,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s01",
      "constrainFunc": "param_32_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 4,
      "name": "tempo",
      "paramId": "tempo",
      "minimum": 0,
      "maximum": 200,
      "exponent": 1,
      "steps": 0,
      "initialValue": 110,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s05",
      "constrainFunc": "param_33_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 5,
      "name": "octave",
      "paramId": "octave",
      "minimum": 0,
      "maximum": 8,
      "exponent": 1,
      "steps": 0,
      "initialValue": 4,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s04",
      "constrainFunc": "param_34_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 6,
      "name": "reverb_mix",
      "paramId": "reverb_mix",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s02",
      "constrainFunc": "param_35_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 7,
      "name": "chord_1",
      "paramId": "chord_1",
      "minimum": 0,
      "maximum": 4,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s11",
      "constrainFunc": "param_36_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 8,
      "name": "chord_2",
      "paramId": "chord_2",
      "minimum": 0,
      "maximum": 4,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s10",
      "constrainFunc": "param_37_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 9,
      "name": "chord_3",
      "paramId": "chord_3",
      "minimum": 0,
      "maximum": 4,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s09",
      "constrainFunc": "param_38_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 10,
      "name": "chord_4",
      "paramId": "chord_4",
      "minimum": 0,
      "maximum": 4,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s08",
      "constrainFunc": "param_39_value_constrain"
    },
    {
      "type": "ParameterTypeBang",
      "index": 11,
      "name": "message_18_bangval",
      "paramId": "message_obj-242/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s01"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 12,
      "name": "numberobj_31_value",
      "paramId": "number_obj-36/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s01"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 13,
      "name": "toggle_01_value",
      "paramId": "toggle_obj-55/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 1,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "toggle_s01"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 14,
      "name": "decay",
      "paramId": "patcher_obj-15/decay",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "Decay",
      "unit": "%",
      "order": 4,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s03",
      "constrainFunc": "param_01_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 15,
      "name": "mix",
      "paramId": "patcher_obj-15/mix",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "Mix",
      "unit": "%",
      "order": 6,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s01",
      "constrainFunc": "param_02_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 16,
      "name": "jitter",
      "paramId": "patcher_obj-15/jitter",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "Jitter",
      "unit": "%",
      "order": 5,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s02",
      "constrainFunc": "param_03_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 17,
      "name": "damp",
      "paramId": "patcher_obj-15/damp",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "Damp",
      "unit": "%",
      "order": 1,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s06",
      "constrainFunc": "param_04_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 18,
      "name": "size",
      "paramId": "patcher_obj-15/size",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "Size",
      "unit": "%",
      "order": 3,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s04",
      "constrainFunc": "param_05_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 19,
      "name": "diff",
      "paramId": "patcher_obj-15/diff",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "Diff",
      "unit": "%",
      "order": 2,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s05",
      "constrainFunc": "param_06_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 20,
      "name": "numberobj_01_value",
      "paramId": "patcher_obj-15/number_obj-26/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0.52,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s05"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 21,
      "name": "numberobj_02_value",
      "paramId": "patcher_obj-15/number_obj-2/value",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s06"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 22,
      "name": "numberobj_03_value",
      "paramId": "patcher_obj-15/number_obj-119/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0.6,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s01"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 23,
      "name": "numberobj_04_value",
      "paramId": "patcher_obj-15/number_obj-67/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 19.999003208318815,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s02"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 24,
      "name": "numberobj_05_value",
      "paramId": "patcher_obj-15/number_obj-3/value",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 60,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s03"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 25,
      "name": "numberobj_06_value",
      "paramId": "patcher_obj-15/number_obj-54/value",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s04"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 26,
      "name": "numberobj_07_value",
      "paramId": "patcher_obj-15/number_obj-4/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 2713.7017003957862,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s11"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 27,
      "name": "numberobj_08_value",
      "paramId": "patcher_obj-15/number_obj-9/value",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s12"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 28,
      "name": "numberobj_09_value",
      "paramId": "patcher_obj-15/number_obj-21/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0.805,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s07"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 29,
      "name": "numberobj_10_value",
      "paramId": "patcher_obj-15/number_obj-23/value",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s08"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 30,
      "name": "numberobj_11_value",
      "paramId": "patcher_obj-15/number_obj-16/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0.5,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s09"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 31,
      "name": "numberobj_12_value",
      "paramId": "patcher_obj-15/number_obj-18/value",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s10"
    },
    {
      "type": "ParameterTypeBang",
      "index": 32,
      "name": "message_01_bangval",
      "paramId": "p_obj-10/message_obj-38/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s04"
    },
    {
      "type": "ParameterTypeBang",
      "index": 33,
      "name": "message_02_bangval",
      "paramId": "p_obj-10/message_obj-40/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s03"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 34,
      "name": "numberobj_13_value",
      "paramId": "p_obj-10/number_obj-23/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 48,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s01"
    },
    {
      "type": "ParameterTypeBang",
      "index": 35,
      "name": "message_03_bangval",
      "paramId": "p_obj-10/message_obj-42/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s02"
    },
    {
      "type": "ParameterTypeBang",
      "index": 36,
      "name": "message_04_bangval",
      "paramId": "p_obj-10/message_obj-45/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s01"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 37,
      "name": "numberobj_14_value",
      "paramId": "p_obj-10/number_obj-20/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s02"
    },
    {
      "type": "ParameterTypeBang",
      "index": 38,
      "name": "message_05_bangval",
      "paramId": "p_obj-19/message_obj-38/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s04"
    },
    {
      "type": "ParameterTypeBang",
      "index": 39,
      "name": "message_06_bangval",
      "paramId": "p_obj-19/message_obj-40/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s03"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 40,
      "name": "numberobj_15_value",
      "paramId": "p_obj-19/number_obj-23/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 47,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s01"
    },
    {
      "type": "ParameterTypeBang",
      "index": 41,
      "name": "message_07_bangval",
      "paramId": "p_obj-19/message_obj-42/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s02"
    },
    {
      "type": "ParameterTypeBang",
      "index": 42,
      "name": "message_08_bangval",
      "paramId": "p_obj-19/message_obj-45/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s01"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 43,
      "name": "numberobj_16_value",
      "paramId": "p_obj-19/number_obj-20/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s02"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 44,
      "name": "release",
      "paramId": "p_obj-45/release",
      "minimum": 0,
      "maximum": 1000,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s01",
      "constrainFunc": "param_07_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 45,
      "name": "attack",
      "paramId": "p_obj-45/attack",
      "minimum": 0,
      "maximum": 1000,
      "exponent": 1,
      "steps": 0,
      "initialValue": 5,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s02",
      "constrainFunc": "param_08_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 46,
      "name": "ratio",
      "paramId": "p_obj-45/ratio",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 3,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s03",
      "constrainFunc": "param_09_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 47,
      "name": "threshold",
      "paramId": "p_obj-45/threshold",
      "minimum": -100,
      "maximum": 10,
      "exponent": 1,
      "steps": 0,
      "initialValue": -30,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s04",
      "constrainFunc": "param_10_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 48,
      "name": "input_gain",
      "paramId": "p_obj-45/input_gain",
      "minimum": 0,
      "maximum": 100,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s05",
      "constrainFunc": "param_11_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 49,
      "name": "parallel_mix",
      "paramId": "p_obj-45/parallel_mix",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 1,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s06",
      "constrainFunc": "param_12_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 50,
      "name": "numberobj_17_value",
      "paramId": "p_obj-45/compressor[1]/number_obj-62/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s04"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 51,
      "name": "numberobj_18_value",
      "paramId": "p_obj-45/compressor[1]/flonum[2]/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 5,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s02"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 52,
      "name": "numberobj_19_value",
      "paramId": "p_obj-45/compressor[1]/flonum[3]/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s03"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 53,
      "name": "numberobj_20_value",
      "paramId": "p_obj-45/compressor[1]/flonum/value",
      "minimum": -96,
      "maximum": 0,
      "exponent": 1,
      "steps": 0,
      "initialValue": -30,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s05"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 54,
      "name": "numberobj_21_value",
      "paramId": "p_obj-45/compressor[1]/flonum[1]/value",
      "minimum": 1,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 3,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s01"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 55,
      "name": "numberobj_22_value",
      "paramId": "p_obj-45/compressor/number_obj-62/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s04"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 56,
      "name": "numberobj_23_value",
      "paramId": "p_obj-45/compressor/flonum[2]/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 5,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s02"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 57,
      "name": "numberobj_24_value",
      "paramId": "p_obj-45/compressor/flonum[3]/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 50,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s03"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 58,
      "name": "numberobj_25_value",
      "paramId": "p_obj-45/compressor/flonum/value",
      "minimum": -96,
      "maximum": 0,
      "exponent": 1,
      "steps": 0,
      "initialValue": -30,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s05"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 59,
      "name": "numberobj_26_value",
      "paramId": "p_obj-45/compressor/flonum[1]/value",
      "minimum": 1,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 3,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s01"
    },
    {
      "type": "ParameterTypeBang",
      "index": 60,
      "name": "button_01_bangval",
      "paramId": "p_obj-38/button_obj-20/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s01"
    },
    {
      "type": "ParameterTypeBang",
      "index": 61,
      "name": "message_09_bangval",
      "paramId": "p_obj-44/message_obj-38/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s04"
    },
    {
      "type": "ParameterTypeBang",
      "index": 62,
      "name": "message_10_bangval",
      "paramId": "p_obj-44/message_obj-40/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s03"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 63,
      "name": "numberobj_27_value",
      "paramId": "p_obj-44/number_obj-23/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 45,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s01"
    },
    {
      "type": "ParameterTypeBang",
      "index": 64,
      "name": "message_11_bangval",
      "paramId": "p_obj-44/message_obj-42/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s02"
    },
    {
      "type": "ParameterTypeBang",
      "index": 65,
      "name": "message_12_bangval",
      "paramId": "p_obj-44/message_obj-45/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s01"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 66,
      "name": "numberobj_28_value",
      "paramId": "p_obj-44/number_obj-20/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s02"
    },
    {
      "type": "ParameterTypeBang",
      "index": 67,
      "name": "message_13_bangval",
      "paramId": "p_obj-52/message_obj-38/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s04"
    },
    {
      "type": "ParameterTypeBang",
      "index": 68,
      "name": "message_14_bangval",
      "paramId": "p_obj-52/message_obj-40/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s03"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 69,
      "name": "numberobj_29_value",
      "paramId": "p_obj-52/number_obj-23/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 47,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s01"
    },
    {
      "type": "ParameterTypeBang",
      "index": 70,
      "name": "message_15_bangval",
      "paramId": "p_obj-52/message_obj-42/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s02"
    },
    {
      "type": "ParameterTypeBang",
      "index": 71,
      "name": "message_16_bangval",
      "paramId": "p_obj-52/message_obj-45/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s01"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 72,
      "name": "numberobj_30_value",
      "paramId": "p_obj-52/number_obj-20/value",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "numberobj_a1_s02"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 73,
      "name": "drums_1",
      "paramId": "p_obj-193/drums_1",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s16",
      "constrainFunc": "param_13_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 74,
      "name": "drums_2",
      "paramId": "p_obj-193/drums_2",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s15",
      "constrainFunc": "param_14_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 75,
      "name": "drums_3",
      "paramId": "p_obj-193/drums_3",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s14",
      "constrainFunc": "param_15_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 76,
      "name": "drums_4",
      "paramId": "p_obj-193/drums_4",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s13",
      "constrainFunc": "param_16_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 77,
      "name": "drums_5",
      "paramId": "p_obj-193/drums_5",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s12",
      "constrainFunc": "param_17_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 78,
      "name": "drums_6",
      "paramId": "p_obj-193/drums_6",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s11",
      "constrainFunc": "param_18_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 79,
      "name": "drums_7",
      "paramId": "p_obj-193/drums_7",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s10",
      "constrainFunc": "param_19_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 80,
      "name": "drums_8",
      "paramId": "p_obj-193/drums_8",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s09",
      "constrainFunc": "param_20_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 81,
      "name": "drums_9",
      "paramId": "p_obj-193/drums_9",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s08",
      "constrainFunc": "param_21_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 82,
      "name": "drums_10",
      "paramId": "p_obj-193/drums_10",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s07",
      "constrainFunc": "param_22_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 83,
      "name": "drums_11",
      "paramId": "p_obj-193/drums_11",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s06",
      "constrainFunc": "param_23_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 84,
      "name": "drums_12",
      "paramId": "p_obj-193/drums_12",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s05",
      "constrainFunc": "param_24_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 85,
      "name": "drums_13",
      "paramId": "p_obj-193/drums_13",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s04",
      "constrainFunc": "param_25_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 86,
      "name": "drums_14",
      "paramId": "p_obj-193/drums_14",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s03",
      "constrainFunc": "param_26_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 87,
      "name": "drums_15",
      "paramId": "p_obj-193/drums_15",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s02",
      "constrainFunc": "param_27_value_constrain"
    },
    {
      "type": "ParameterTypeNumber",
      "index": 88,
      "name": "drums_16",
      "paramId": "p_obj-193/drums_16",
      "minimum": 0,
      "maximum": 15,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": true,
      "initialized": true,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": true,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "param_s01",
      "constrainFunc": "param_28_value_constrain"
    },
    {
      "type": "ParameterTypeBang",
      "index": 89,
      "name": "message_17_bangval",
      "paramId": "p_obj-193/message_obj-133/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "message_s01"
    },
    {
      "type": "ParameterTypeBang",
      "index": 90,
      "name": "button_02_bangval",
      "paramId": "p_obj-193/button_obj-123/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s05"
    },
    {
      "type": "ParameterTypeBang",
      "index": 91,
      "name": "button_03_bangval",
      "paramId": "p_obj-193/button_obj-122/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s06"
    },
    {
      "type": "ParameterTypeBang",
      "index": 92,
      "name": "button_04_bangval",
      "paramId": "p_obj-193/button_obj-212/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s04"
    },
    {
      "type": "ParameterTypeBang",
      "index": 93,
      "name": "button_05_bangval",
      "paramId": "p_obj-193/button_obj-214/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s03"
    },
    {
      "type": "ParameterTypeBang",
      "index": 94,
      "name": "button_06_bangval",
      "paramId": "p_obj-193/button_obj-121/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s07"
    },
    {
      "type": "ParameterTypeBang",
      "index": 95,
      "name": "button_07_bangval",
      "paramId": "p_obj-193/button_obj-216/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s02"
    },
    {
      "type": "ParameterTypeBang",
      "index": 96,
      "name": "button_08_bangval",
      "paramId": "p_obj-193/button_obj-120/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s08"
    },
    {
      "type": "ParameterTypeBang",
      "index": 97,
      "name": "button_09_bangval",
      "paramId": "p_obj-193/button_obj-218/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s01"
    },
    {
      "type": "ParameterTypeBang",
      "index": 98,
      "name": "button_10_bangval",
      "paramId": "p_obj-193/button_obj-118/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s09"
    },
    {
      "type": "ParameterTypeBang",
      "index": 99,
      "name": "button_11_bangval",
      "paramId": "p_obj-193/button_obj-117/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s10"
    },
    {
      "type": "ParameterTypeBang",
      "index": 100,
      "name": "button_12_bangval",
      "paramId": "p_obj-193/button_obj-116/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s11"
    },
    {
      "type": "ParameterTypeBang",
      "index": 101,
      "name": "button_13_bangval",
      "paramId": "p_obj-193/button_obj-115/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s12"
    },
    {
      "type": "ParameterTypeBang",
      "index": 102,
      "name": "button_14_bangval",
      "paramId": "p_obj-193/button_obj-114/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s13"
    },
    {
      "type": "ParameterTypeBang",
      "index": 103,
      "name": "button_15_bangval",
      "paramId": "p_obj-193/button_obj-112/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s14"
    },
    {
      "type": "ParameterTypeBang",
      "index": 104,
      "name": "button_16_bangval",
      "paramId": "p_obj-193/button_obj-111/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s15"
    },
    {
      "type": "ParameterTypeBang",
      "index": 105,
      "name": "button_17_bangval",
      "paramId": "p_obj-193/button_obj-110/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s16"
    },
    {
      "type": "ParameterTypeBang",
      "index": 106,
      "name": "button_18_bangval",
      "paramId": "p_obj-193/button_obj-109/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s17"
    },
    {
      "type": "ParameterTypeBang",
      "index": 107,
      "name": "button_19_bangval",
      "paramId": "p_obj-193/button_obj-108/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s18"
    },
    {
      "type": "ParameterTypeBang",
      "index": 108,
      "name": "button_20_bangval",
      "paramId": "p_obj-193/button_obj-106/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s19"
    },
    {
      "type": "ParameterTypeBang",
      "index": 109,
      "name": "button_21_bangval",
      "paramId": "p_obj-193/button_obj-105/bangval",
      "minimum": 0,
      "maximum": 1,
      "exponent": 1,
      "steps": 0,
      "initialValue": 0,
      "isEnum": false,
      "enumValues": [],
      "displayName": "",
      "unit": "",
      "order": 0,
      "sendinit": 0,
      "initialized": false,
      "debug": false,
      "saveable": true,
      "transmittable": true,
      "visible": false,
      "signalIndex": null,
      "ioType": "IOTypeUndefined",
      "serialId": "button_s20"
    }
  ],
  "numParameters": 110,
  "numSignalInParameters": 0,
  "numSignalOutParameters": 0,
  "numInputChannels": 0,
  "numOutputChannels": 2,
  "numMidiInputPorts": 1,
  "numMidiOutputPorts": 0,
  "externalDataRefs": [
    {
      "id": "perc",
      "file": "/Users/williamozeas/Documents/GitHub/CMUCapstone/Samples/SD_SEISMIC_perc_hiya.wav",
      "type": "Float32Buffer"
    },
    {
      "id": "snare",
      "file": "/Users/williamozeas/Documents/GitHub/CMUCapstone/Samples/SD_SEISMIC_snare_clucky.wav",
      "type": "Float32Buffer"
    },
    {
      "id": "kick",
      "file": "/Users/williamozeas/Documents/GitHub/CMUCapstone/Samples/SD_SEISMIC_kick_cleaner.wav",
      "type": "Float32Buffer"
    },
    {
      "id": "hat",
      "file": "/Users/williamozeas/Documents/GitHub/CMUCapstone/Samples/SD_SEISMIC_hat_perfect.wav",
      "type": "Float32Buffer"
    }
  ],
  "patcherSerial": 0,
  "inports": [],
  "outports": [
    {
      "tag": "compression",
      "meta": ""
    }
  ],
  "inlets": [
    {
      "type": "midi"
    }
  ],
  "outlets": [
    {
      "type": "signal",
      "index": 1,
      "tag": "out1",
      "meta": ""
    },
    {
      "type": "signal",
      "index": 2,
      "tag": "out2",
      "meta": ""
    }
  ],
  "paramConversion": {
    "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
    "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 0:\n    case 2:\n    case 12:\n    case 13:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n        {\n            value = (value < 0 ? 0 : (value > 4 ? 4 : value));\n            let normalizedValue = (value - 0) / (4 - 0);\n            return normalizedValue;\n        }\n    case 5:\n        {\n            value = (value < 0 ? 0 : (value > 8 ? 8 : value));\n            let normalizedValue = (value - 0) / (8 - 0);\n            return normalizedValue;\n        }\n    case 6:\n        {\n            value = (value < 0 ? 0 : (value > 100 ? 100 : value));\n            let normalizedValue = (value - 0) / (100 - 0);\n            return normalizedValue;\n        }\n    case 4:\n        {\n            value = (value < 0 ? 0 : (value > 200 ? 200 : value));\n            let normalizedValue = (value - 0) / (200 - 0);\n            return normalizedValue;\n        }\n    case 3:\n        {\n            value = (value < 1 ? 1 : (value > 32 ? 32 : value));\n            let normalizedValue = (value - 1) / (32 - 1);\n            return normalizedValue;\n        }\n    case 1:\n        {\n            value = (value < 0.01 ? 0.01 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0.01) / (1 - 0.01);\n            return normalizedValue;\n        }\n    default:\n        index -= 14;\n\n        if (index < this.patcher_01.getNumParameters())\n            return this.patcher_01.convertToNormalizedParameterValue(index, value);\n\n        index -= this.patcher_01.getNumParameters();\n\n        if (index < this.p_27.getNumParameters())\n            return this.p_27.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_27.getNumParameters();\n\n        if (index < this.p_28.getNumParameters())\n            return this.p_28.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_28.getNumParameters();\n\n        if (index < this.p_29.getNumParameters())\n            return this.p_29.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_29.getNumParameters();\n\n        if (index < this.p_30[0].getNumParameters()) {\n            {\n                return this.p_30[0].convertToNormalizedParameterValue(index, value);\n            }\n        }\n\n        index -= this.p_30[0].getNumParameters();\n\n        if (index < this.p_31.getNumParameters())\n            return this.p_31.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_31.getNumParameters();\n\n        if (index < this.p_32.getNumParameters())\n            return this.p_32.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_32.getNumParameters();\n\n        if (index < this.p_33.getNumParameters())\n            return this.p_33.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_33.getNumParameters();\n\n        if (index < this.p_34.getNumParameters())\n            return this.p_34.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
    "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 0:\n    case 2:\n    case 12:\n    case 13:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (4 - 0);\n            }\n        }\n    case 5:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (8 - 0);\n            }\n        }\n    case 6:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (100 - 0);\n            }\n        }\n    case 4:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (200 - 0);\n            }\n        }\n    case 3:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 1 + value * (32 - 1);\n            }\n        }\n    case 1:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0.01 + value * (1 - 0.01);\n            }\n        }\n    default:\n        index -= 14;\n\n        if (index < this.patcher_01.getNumParameters())\n            return this.patcher_01.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.patcher_01.getNumParameters();\n\n        if (index < this.p_27.getNumParameters())\n            return this.p_27.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_27.getNumParameters();\n\n        if (index < this.p_28.getNumParameters())\n            return this.p_28.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_28.getNumParameters();\n\n        if (index < this.p_29.getNumParameters())\n            return this.p_29.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_29.getNumParameters();\n\n        if (index < this.p_30[0].getNumParameters()) {\n            {\n                return this.p_30[0].convertFromNormalizedParameterValue(index, value);\n            }\n        }\n\n        index -= this.p_30[0].getNumParameters();\n\n        if (index < this.p_31.getNumParameters())\n            return this.p_31.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_31.getNumParameters();\n\n        if (index < this.p_32.getNumParameters())\n            return this.p_32.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_32.getNumParameters();\n\n        if (index < this.p_33.getNumParameters())\n            return this.p_33.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_33.getNumParameters();\n\n        if (index < this.p_34.getNumParameters())\n            return this.p_34.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
    "getNumParameters": "function getNumParameters() {\n    return 14 + this.patcher_01.getNumParameters() + this.p_27.getNumParameters() + this.p_28.getNumParameters() + this.p_29.getNumParameters() + this.p_30[0].getNumParameters() + this.p_31.getNumParameters() + this.p_32.getNumParameters() + this.p_33.getNumParameters() + this.p_34.getNumParameters();\n}",
    "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    case 0:\n        {\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 1:\n        {\n            v = (v > 1 ? 1 : (v < 0.01 ? 0.01 : v));\n            return v;\n        }\n    case 2:\n        {\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 3:\n        {\n            v = (v > 32 ? 32 : (v < 1 ? 1 : v));\n            return v;\n        }\n    case 4:\n        {\n            v = (v > 200 ? 200 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 5:\n        {\n            v = (v > 8 ? 8 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 6:\n        {\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 7:\n        {\n            v = (v > 4 ? 4 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 8:\n        {\n            v = (v > 4 ? 4 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 9:\n        {\n            v = (v > 4 ? 4 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 10:\n        {\n            v = (v > 4 ? 4 : (v < 0 ? 0 : v));\n            return v;\n        }\n    default:\n        index -= 14;\n\n        if (index < this.patcher_01.getNumParameters())\n            return this.patcher_01.constrainParameterValue(index, value);\n\n        index -= this.patcher_01.getNumParameters();\n\n        if (index < this.p_27.getNumParameters())\n            return this.p_27.constrainParameterValue(index, value);\n\n        index -= this.p_27.getNumParameters();\n\n        if (index < this.p_28.getNumParameters())\n            return this.p_28.constrainParameterValue(index, value);\n\n        index -= this.p_28.getNumParameters();\n\n        if (index < this.p_29.getNumParameters())\n            return this.p_29.constrainParameterValue(index, value);\n\n        index -= this.p_29.getNumParameters();\n\n        if (index < this.p_30[0].getNumParameters()) {\n            {\n                return this.p_30[0].constrainParameterValue(index, value);\n            }\n        }\n\n        index -= this.p_30[0].getNumParameters();\n\n        if (index < this.p_31.getNumParameters())\n            return this.p_31.constrainParameterValue(index, value);\n\n        index -= this.p_31.getNumParameters();\n\n        if (index < this.p_32.getNumParameters())\n            return this.p_32.constrainParameterValue(index, value);\n\n        index -= this.p_32.getNumParameters();\n\n        if (index < this.p_33.getNumParameters())\n            return this.p_33.constrainParameterValue(index, value);\n\n        index -= this.p_33.getNumParameters();\n\n        if (index < this.p_34.getNumParameters())\n            return this.p_34.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
    "subpatches": {
      "patcher_01": {
        "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
        "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 6:\n    case 8:\n    case 9:\n    case 12:\n    case 14:\n    case 16:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 7:\n    case 10:\n    case 11:\n    case 13:\n    case 15:\n    case 17:\n        {\n            value = (value < 0 ? 0 : (value > 100 ? 100 : value));\n            let normalizedValue = (value - 0) / (100 - 0);\n            return normalizedValue;\n        }\n    default:\n        index -= 18;\n\n        if (index < this.p_01.getNumParameters())\n            return this.p_01.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_01.getNumParameters();\n\n        if (index < this.p_02.getNumParameters())\n            return this.p_02.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_02.getNumParameters();\n\n        if (index < this.p_03.getNumParameters())\n            return this.p_03.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_03.getNumParameters();\n\n        if (index < this.p_04.getNumParameters())\n            return this.p_04.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_04.getNumParameters();\n\n        if (index < this.p_05.getNumParameters())\n            return this.p_05.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_05.getNumParameters();\n\n        if (index < this.p_06.getNumParameters())\n            return this.p_06.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_06.getNumParameters();\n\n        if (index < this.p_07.getNumParameters())\n            return this.p_07.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_07.getNumParameters();\n\n        if (index < this.p_08.getNumParameters())\n            return this.p_08.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
        "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 6:\n    case 8:\n    case 9:\n    case 12:\n    case 14:\n    case 16:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 7:\n    case 10:\n    case 11:\n    case 13:\n    case 15:\n    case 17:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (100 - 0);\n            }\n        }\n    default:\n        index -= 18;\n\n        if (index < this.p_01.getNumParameters())\n            return this.p_01.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_01.getNumParameters();\n\n        if (index < this.p_02.getNumParameters())\n            return this.p_02.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_02.getNumParameters();\n\n        if (index < this.p_03.getNumParameters())\n            return this.p_03.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_03.getNumParameters();\n\n        if (index < this.p_04.getNumParameters())\n            return this.p_04.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_04.getNumParameters();\n\n        if (index < this.p_05.getNumParameters())\n            return this.p_05.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_05.getNumParameters();\n\n        if (index < this.p_06.getNumParameters())\n            return this.p_06.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_06.getNumParameters();\n\n        if (index < this.p_07.getNumParameters())\n            return this.p_07.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_07.getNumParameters();\n\n        if (index < this.p_08.getNumParameters())\n            return this.p_08.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
        "getNumParameters": "function getNumParameters() {\n    return 18 + this.p_01.getNumParameters() + this.p_02.getNumParameters() + this.p_03.getNumParameters() + this.p_04.getNumParameters() + this.p_05.getNumParameters() + this.p_06.getNumParameters() + this.p_07.getNumParameters() + this.p_08.getNumParameters();\n}",
        "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    case 0:\n        {\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 1:\n        {\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 2:\n        {\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 3:\n        {\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 4:\n        {\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 5:\n        {\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\n            return v;\n        }\n    default:\n        index -= 18;\n\n        if (index < this.p_01.getNumParameters())\n            return this.p_01.constrainParameterValue(index, value);\n\n        index -= this.p_01.getNumParameters();\n\n        if (index < this.p_02.getNumParameters())\n            return this.p_02.constrainParameterValue(index, value);\n\n        index -= this.p_02.getNumParameters();\n\n        if (index < this.p_03.getNumParameters())\n            return this.p_03.constrainParameterValue(index, value);\n\n        index -= this.p_03.getNumParameters();\n\n        if (index < this.p_04.getNumParameters())\n            return this.p_04.constrainParameterValue(index, value);\n\n        index -= this.p_04.getNumParameters();\n\n        if (index < this.p_05.getNumParameters())\n            return this.p_05.constrainParameterValue(index, value);\n\n        index -= this.p_05.getNumParameters();\n\n        if (index < this.p_06.getNumParameters())\n            return this.p_06.constrainParameterValue(index, value);\n\n        index -= this.p_06.getNumParameters();\n\n        if (index < this.p_07.getNumParameters())\n            return this.p_07.constrainParameterValue(index, value);\n\n        index -= this.p_07.getNumParameters();\n\n        if (index < this.p_08.getNumParameters())\n            return this.p_08.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
        "subpatches": {
          "p_01": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_02": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_03": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_04": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_05": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_06": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_07": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_08": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          }
        },
        "isPolyphonic": false
      },
      "p_27": {
        "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
        "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 2:\n    case 5:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    default:\n        return value;\n    }\n}",
        "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 2:\n    case 5:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    default:\n        return value;\n    }\n}",
        "getNumParameters": "function getNumParameters() {\n    return 6;\n}",
        "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
        "subpatches": {},
        "isPolyphonic": false
      },
      "p_28": {
        "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
        "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 2:\n    case 5:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    default:\n        return value;\n    }\n}",
        "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 2:\n    case 5:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    default:\n        return value;\n    }\n}",
        "getNumParameters": "function getNumParameters() {\n    return 6;\n}",
        "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
        "subpatches": {},
        "isPolyphonic": false
      },
      "p_29": {
        "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
        "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 5:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    case 2:\n    case 4:\n        {\n            value = (value < 0 ? 0 : (value > 100 ? 100 : value));\n            let normalizedValue = (value - 0) / (100 - 0);\n            return normalizedValue;\n        }\n    case 0:\n    case 1:\n        {\n            value = (value < 0 ? 0 : (value > 1000 ? 1000 : value));\n            let normalizedValue = (value - 0) / (1000 - 0);\n            return normalizedValue;\n        }\n    case 3:\n        {\n            value = (value < -100 ? -100 : (value > 10 ? 10 : value));\n            let normalizedValue = (value - -100) / (10 - -100);\n            return normalizedValue;\n        }\n    default:\n        index -= 6;\n\n        if (index < this.p_09.getNumParameters())\n            return this.p_09.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_09.getNumParameters();\n\n        if (index < this.p_10.getNumParameters())\n            return this.p_10.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
        "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 5:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    case 2:\n    case 4:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (100 - 0);\n            }\n        }\n    case 0:\n    case 1:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1000 - 0);\n            }\n        }\n    case 3:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return -100 + value * (10 - -100);\n            }\n        }\n    default:\n        index -= 6;\n\n        if (index < this.p_09.getNumParameters())\n            return this.p_09.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_09.getNumParameters();\n\n        if (index < this.p_10.getNumParameters())\n            return this.p_10.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
        "getNumParameters": "function getNumParameters() {\n    return 6 + this.p_09.getNumParameters() + this.p_10.getNumParameters();\n}",
        "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    case 0:\n        {\n            v = (v > 1000 ? 1000 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 1:\n        {\n            v = (v > 1000 ? 1000 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 2:\n        {\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 3:\n        {\n            v = (v > 10 ? 10 : (v < -100 ? -100 : v));\n            return v;\n        }\n    case 4:\n        {\n            v = (v > 100 ? 100 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 5:\n        {\n            v = (v > 1 ? 1 : (v < 0 ? 0 : v));\n            return v;\n        }\n    default:\n        index -= 6;\n\n        if (index < this.p_09.getNumParameters())\n            return this.p_09.constrainParameterValue(index, value);\n\n        index -= this.p_09.getNumParameters();\n\n        if (index < this.p_10.getNumParameters())\n            return this.p_10.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
        "subpatches": {
          "p_09": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 0:\n    case 1:\n    case 2:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    case 4:\n        {\n            value = (value < 1 ? 1 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 1) / (1 - 1);\n            return normalizedValue;\n        }\n    case 3:\n        {\n            value = (value < -96 ? -96 : (value > 0 ? 0 : value));\n            let normalizedValue = (value - -96) / (0 - -96);\n            return normalizedValue;\n        }\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 0:\n    case 1:\n    case 2:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    case 4:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 1 + value * (1 - 1);\n            }\n        }\n    case 3:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return -96 + value * (0 - -96);\n            }\n        }\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 5;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_10": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 0:\n    case 1:\n    case 2:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    case 4:\n        {\n            value = (value < 1 ? 1 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 1) / (1 - 1);\n            return normalizedValue;\n        }\n    case 3:\n        {\n            value = (value < -96 ? -96 : (value > 0 ? 0 : value));\n            let normalizedValue = (value - -96) / (0 - -96);\n            return normalizedValue;\n        }\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 0:\n    case 1:\n    case 2:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    case 4:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 1 + value * (1 - 1);\n            }\n        }\n    case 3:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return -96 + value * (0 - -96);\n            }\n        }\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 5;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          }
        },
        "isPolyphonic": false
      },
      "p_30": {
        "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
        "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
        "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
        "getNumParameters": "function getNumParameters() {\n    return 1;\n}",
        "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
        "subpatches": {},
        "isPolyphonic": true
      },
      "p_31": {
        "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
        "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 2:\n    case 5:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    default:\n        return value;\n    }\n}",
        "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 2:\n    case 5:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    default:\n        return value;\n    }\n}",
        "getNumParameters": "function getNumParameters() {\n    return 6;\n}",
        "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
        "subpatches": {},
        "isPolyphonic": false
      },
      "p_32": {
        "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
        "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 2:\n    case 5:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n            let normalizedValue = (value - 0) / (1 - 0);\n            return normalizedValue;\n        }\n    default:\n        return value;\n    }\n}",
        "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 2:\n    case 5:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (1 - 0);\n            }\n        }\n    default:\n        return value;\n    }\n}",
        "getNumParameters": "function getNumParameters() {\n    return 6;\n}",
        "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
        "subpatches": {},
        "isPolyphonic": false
      },
      "p_33": {
        "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
        "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 11:\n    case 12:\n    case 13:\n    case 14:\n    case 15:\n        {\n            value = (value < 0 ? 0 : (value > 15 ? 15 : value));\n            let normalizedValue = (value - 0) / (15 - 0);\n            return normalizedValue;\n        }\n    default:\n        index -= 37;\n\n        if (index < this.p_11.getNumParameters())\n            return this.p_11.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_11.getNumParameters();\n\n        if (index < this.p_12.getNumParameters())\n            return this.p_12.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_12.getNumParameters();\n\n        if (index < this.p_13.getNumParameters())\n            return this.p_13.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_13.getNumParameters();\n\n        if (index < this.p_14.getNumParameters())\n            return this.p_14.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_14.getNumParameters();\n\n        if (index < this.p_15.getNumParameters())\n            return this.p_15.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_15.getNumParameters();\n\n        if (index < this.p_16.getNumParameters())\n            return this.p_16.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_16.getNumParameters();\n\n        if (index < this.p_17.getNumParameters())\n            return this.p_17.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_17.getNumParameters();\n\n        if (index < this.p_18.getNumParameters())\n            return this.p_18.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_18.getNumParameters();\n\n        if (index < this.p_19.getNumParameters())\n            return this.p_19.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_19.getNumParameters();\n\n        if (index < this.p_20.getNumParameters())\n            return this.p_20.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_20.getNumParameters();\n\n        if (index < this.p_21.getNumParameters())\n            return this.p_21.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_21.getNumParameters();\n\n        if (index < this.p_22.getNumParameters())\n            return this.p_22.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_22.getNumParameters();\n\n        if (index < this.p_23.getNumParameters())\n            return this.p_23.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_23.getNumParameters();\n\n        if (index < this.p_24.getNumParameters())\n            return this.p_24.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_24.getNumParameters();\n\n        if (index < this.p_25.getNumParameters())\n            return this.p_25.convertToNormalizedParameterValue(index, value);\n\n        index -= this.p_25.getNumParameters();\n\n        if (index < this.p_26.getNumParameters())\n            return this.p_26.convertToNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
        "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 11:\n    case 12:\n    case 13:\n    case 14:\n    case 15:\n        {\n            value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n            {\n                return 0 + value * (15 - 0);\n            }\n        }\n    default:\n        index -= 37;\n\n        if (index < this.p_11.getNumParameters())\n            return this.p_11.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_11.getNumParameters();\n\n        if (index < this.p_12.getNumParameters())\n            return this.p_12.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_12.getNumParameters();\n\n        if (index < this.p_13.getNumParameters())\n            return this.p_13.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_13.getNumParameters();\n\n        if (index < this.p_14.getNumParameters())\n            return this.p_14.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_14.getNumParameters();\n\n        if (index < this.p_15.getNumParameters())\n            return this.p_15.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_15.getNumParameters();\n\n        if (index < this.p_16.getNumParameters())\n            return this.p_16.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_16.getNumParameters();\n\n        if (index < this.p_17.getNumParameters())\n            return this.p_17.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_17.getNumParameters();\n\n        if (index < this.p_18.getNumParameters())\n            return this.p_18.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_18.getNumParameters();\n\n        if (index < this.p_19.getNumParameters())\n            return this.p_19.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_19.getNumParameters();\n\n        if (index < this.p_20.getNumParameters())\n            return this.p_20.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_20.getNumParameters();\n\n        if (index < this.p_21.getNumParameters())\n            return this.p_21.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_21.getNumParameters();\n\n        if (index < this.p_22.getNumParameters())\n            return this.p_22.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_22.getNumParameters();\n\n        if (index < this.p_23.getNumParameters())\n            return this.p_23.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_23.getNumParameters();\n\n        if (index < this.p_24.getNumParameters())\n            return this.p_24.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_24.getNumParameters();\n\n        if (index < this.p_25.getNumParameters())\n            return this.p_25.convertFromNormalizedParameterValue(index, value);\n\n        index -= this.p_25.getNumParameters();\n\n        if (index < this.p_26.getNumParameters())\n            return this.p_26.convertFromNormalizedParameterValue(index, value);\n\n        return value;\n    }\n}",
        "getNumParameters": "function getNumParameters() {\n    return 37 + this.p_11.getNumParameters() + this.p_12.getNumParameters() + this.p_13.getNumParameters() + this.p_14.getNumParameters() + this.p_15.getNumParameters() + this.p_16.getNumParameters() + this.p_17.getNumParameters() + this.p_18.getNumParameters() + this.p_19.getNumParameters() + this.p_20.getNumParameters() + this.p_21.getNumParameters() + this.p_22.getNumParameters() + this.p_23.getNumParameters() + this.p_24.getNumParameters() + this.p_25.getNumParameters() + this.p_26.getNumParameters();\n}",
        "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    case 0:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 1:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 2:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 3:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 4:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 5:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 6:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 7:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 8:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 9:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 10:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 11:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 12:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 13:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 14:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    case 15:\n        {\n            v = (v > 15 ? 15 : (v < 0 ? 0 : v));\n            return v;\n        }\n    default:\n        index -= 37;\n\n        if (index < this.p_11.getNumParameters())\n            return this.p_11.constrainParameterValue(index, value);\n\n        index -= this.p_11.getNumParameters();\n\n        if (index < this.p_12.getNumParameters())\n            return this.p_12.constrainParameterValue(index, value);\n\n        index -= this.p_12.getNumParameters();\n\n        if (index < this.p_13.getNumParameters())\n            return this.p_13.constrainParameterValue(index, value);\n\n        index -= this.p_13.getNumParameters();\n\n        if (index < this.p_14.getNumParameters())\n            return this.p_14.constrainParameterValue(index, value);\n\n        index -= this.p_14.getNumParameters();\n\n        if (index < this.p_15.getNumParameters())\n            return this.p_15.constrainParameterValue(index, value);\n\n        index -= this.p_15.getNumParameters();\n\n        if (index < this.p_16.getNumParameters())\n            return this.p_16.constrainParameterValue(index, value);\n\n        index -= this.p_16.getNumParameters();\n\n        if (index < this.p_17.getNumParameters())\n            return this.p_17.constrainParameterValue(index, value);\n\n        index -= this.p_17.getNumParameters();\n\n        if (index < this.p_18.getNumParameters())\n            return this.p_18.constrainParameterValue(index, value);\n\n        index -= this.p_18.getNumParameters();\n\n        if (index < this.p_19.getNumParameters())\n            return this.p_19.constrainParameterValue(index, value);\n\n        index -= this.p_19.getNumParameters();\n\n        if (index < this.p_20.getNumParameters())\n            return this.p_20.constrainParameterValue(index, value);\n\n        index -= this.p_20.getNumParameters();\n\n        if (index < this.p_21.getNumParameters())\n            return this.p_21.constrainParameterValue(index, value);\n\n        index -= this.p_21.getNumParameters();\n\n        if (index < this.p_22.getNumParameters())\n            return this.p_22.constrainParameterValue(index, value);\n\n        index -= this.p_22.getNumParameters();\n\n        if (index < this.p_23.getNumParameters())\n            return this.p_23.constrainParameterValue(index, value);\n\n        index -= this.p_23.getNumParameters();\n\n        if (index < this.p_24.getNumParameters())\n            return this.p_24.constrainParameterValue(index, value);\n\n        index -= this.p_24.getNumParameters();\n\n        if (index < this.p_25.getNumParameters())\n            return this.p_25.constrainParameterValue(index, value);\n\n        index -= this.p_25.getNumParameters();\n\n        if (index < this.p_26.getNumParameters())\n            return this.p_26.constrainParameterValue(index, value);\n\n        return value;\n    }\n}",
        "subpatches": {
          "p_11": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_12": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_13": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_14": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_15": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_16": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_17": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_18": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_19": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_20": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_21": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_22": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_23": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_24": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_25": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          },
          "p_26": {
            "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
            "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
            "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
            "subpatches": {},
            "isPolyphonic": false
          }
        },
        "isPolyphonic": false
      },
      "p_34": {
        "applyStepsToNormalizedParameterValue": "function applyStepsToNormalizedParameterValue(normalizedValue, steps) {\n    if (steps == 1) {\n        if (normalizedValue > 0) {\n            normalizedValue = 1.;\n        }\n    } else {\n        let oneStep = 1. / (steps - 1);\n        let numberOfSteps = rnbo_fround(normalizedValue / oneStep * 1 / 1) * 1;\n        normalizedValue = numberOfSteps * oneStep;\n    }\n\n    return normalizedValue;\n}",
        "convertToNormalizedParameterValue": "function convertToNormalizedParameterValue(index, value) {\n    switch (index) {\n    default:\n        return value;\n    }\n}",
        "convertFromNormalizedParameterValue": "function convertFromNormalizedParameterValue(index, value) {\n    value = (value < 0 ? 0 : (value > 1 ? 1 : value));\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
        "getNumParameters": "function getNumParameters() {\n    return 0;\n}",
        "constrainParameterValue": "function constrainParameterValue(index, value) {\n    var v = value;\n\n    switch (index) {\n    default:\n        return value;\n    }\n}",
        "subpatches": {},
        "isPolyphonic": false
      }
    },
    "isPolyphonic": false
  },
  "presetid": "rnbo",
  "meta": {
    "architecture": "x64",
    "filename": "Capstone.maxpat",
    "maxversion": "8.5.1",
    "rnboversion": "1.0.1"
  }
}